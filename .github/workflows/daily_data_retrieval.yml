name: Retrieve Fresh Data from NWT Repository

on:
  push:
    paths:
      - 'replace_fresh_tables.txt'

jobs:
  replace_fresh_tables:
    runs-on: ubuntu-latest
    outputs:
      files_updated: ${{ steps.check_files.outputs.files_updated }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests boto3 snowflake-connector-python

      - name: Retrieve latest %_FRESH files and Replace %_Fresh Files (If Necessary)
        id: check_files
        run: |
          files_updated=$(python replace_fresh_tables.py)
          echo "files_updated=$files_updated" >> $GITHUB_ENV
          echo "::set-output name=files_updated::$files_updated"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_ACCOUNT: ${{ secrets.DBT_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

  job-on-true:
    needs: replace_fresh_tables
    if: ${{ needs.replace_fresh_tables.outputs.files_updated == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Run if files were updated
        run: echo "Running because files were updated"

  job-on-false:
    needs: replace_fresh_tables
    if: ${{ needs.replace_fresh_tables.outputs.files_updated == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Run if no files were updated
        run: echo "Running because no files were updated"



