name: DataOps Pipeline

on:
  workflow_dispatch:
      
jobs:
  Upload-to-S3-Bucket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests boto3 snowflake-connector-python

      - name: Upload to S3
        run: |
          python upload_to_s3.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Load-Data-Into-Tables:
    needs: Upload-to-S3-Bucket
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python

      - name: Load Data into tables
        env:
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_ACCOUNT: ${{ secrets.DBT_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

        run: |
          python load_data_into_tables.py

  Test-Data-Integrity:
    needs: Load-Data-Into-Tables
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python

      - name: Dynamically Create Tables and Load Data
        env:
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_ACCOUNT: ${{ secrets.DBT_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

        run: |
          python create_temporary_table.py
          
  Append-Fresh-Order:
      runs-on: ubuntu-latest
      needs: Test-Data-Integrity
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt_snowflake

      - name: Run dbt for fresh orders
        env:
          DBT_ACCOUNT: ${{ secrets.DBT_ACCOUNT }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
        run: dbt run --profiles-dir profiles -s raw_order
        
  Append-Fresh-Order-Detail:
    runs-on: ubuntu-latest
    needs: Append-Fresh-Order
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt_snowflake

      - name: Run dbt for fresh order details
        env:
          DBT_ACCOUNT: ${{ secrets.DBT_ACCOUNT }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
        run: dbt run --profiles-dir profiles -s raw_order_detail

  Compare-Row-Counts:
      runs-on: ubuntu-latest
      needs:
      - Append-Fresh-Order-Detail
      - Append-Fresh-Order
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.10'

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install snowflake-connector-python

        - name: Compare Row Counts
          env:
            DBT_USER: ${{ secrets.DBT_USER }}
            DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
            DBT_ACCOUNT: ${{ secrets.DBT_ACCOUNT }}
            SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
            SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          run: |
            python compare_row_counts.py

  Parallel-Scripts:
    needs: Test-Data-Integrity
    runs-on: ubuntu-latest
    strategy:
      matrix:
        script-type: ['testing_raw', 'testing_intermediate']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python

      - name: Run Script
        run: |
          if [ "${{ matrix.script-type }}" == "testing_raw" ]; then
            python testing_raw.py
          elif [ "${{ matrix.script-type }}" == "testing_intermediate" ]; then
            python testing_intermediate.py
          fi
